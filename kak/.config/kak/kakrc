# relative line numbers
hook global BufCreate .* %[
    add-highlighter buffer/ number-lines -relative -hlcursor
    add-highlighter buffer/ wrap
]

# disable clippy
#set-option global ui_options ncurses_assistance=off
set-option global ui_options terminal_assistant=cat

#  autocomplete with tab
hook global InsertCompletionShow .* %{
    map window insert <tab> <c-n>
    map window insert <s-tab> <c-p>
}
hook global InsertCompletionHide .* %{
    unmap window insert <tab> <c-n>
    unmap window insert <s-tab> <c-p>
}

# indentation
set-option global tabstop	    4
set-option global indentwidth	4

# tabs to spaces
hook global InsertChar \t %{
    exec -draft h@
}

colorscheme gruvbox

# plug.kak
evaluate-commands %sh{
    plugins="$kak_config/plugins"
    mkdir -p "$plugins"
    [ ! -e "$plugins/plug.kak" ] && \
        git clone -q https://github.com/andreyorst/plug.kak.git "$plugins/plug.kak"
    printf "%s\n" "source '$plugins/plug.kak/rc/plug.kak'"
}
plug "andreyorst/plug.kak" noload

# plugins
plug "andreyorst/fzf.kak"
#plug "andreyorst/kaktree" defer %{
#    set-option global kaktree_double_click_duration '0.5'
#    set-option global kaktree_indentation 1
#    set-option global kaktree_dir_icon_open  '‚ñæ üóÅ '
#    set-option global kaktree_dir_icon_close '‚ñ∏ üóÄ '
#    set-option global kaktree_file_icon      '‚†Ä‚†Äüñ∫'
#} config %{
#    hook global WinSetOption filetype=kaktree %{
#        remove-highlighter buffer/numbers
#        remove-highlighter buffer/matching
#        remove-highlighter buffer/wrap
#        remove-highlighter buffer/show-whitespaces
#    }
#    kaktree-enable
#}

# key mappings
map global normal <c-p> ': fzf-mode<ret>'
map -docstring "select whole XML object" global object t %{c<lt>([\w.]+)\b[^>]*?(?<lt>!/)>,<lt>/([\w.]+)\b[^>]*?(?<lt>!/)><ret>}
map global object h 'c<gt>,<lt><ret>' -docstring "select inner XML content"
map global object o 'c\s,\s<ret>' -docstring "select inbetween the whitespace"

# language server
eval %sh{kak-lsp --kakoune -s $kak_session}
hook global WinSetOption filetype=(rust|python|go|javascript|typescript|c|cpp) %{
    lsp-enable-window
}

# editorconfig
hook global BufOpenFile .* %{ editorconfig-load }
hook global BufNewFile .* %{ editorconfig-load }

